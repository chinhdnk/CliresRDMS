@if (showConfirmation)
{
    <div class="modal fade show d-block" id="exampleModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">@confirmationTitle</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"
                            @onclick="() => OnConfirmationChange(false)">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @confirmationMessage
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal"
                            @onclick="() => OnConfirmationChange(false)">
                        Cancel
                    </button>
                    <button type="button" class="btn btn-danger"
                            @onclick="() => OnConfirmationChange(true)">
                        Delete
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    protected bool showConfirmation { get; set; }

    public string confirmationTitle { get; set; } = "Confirm Delete";

    public string confirmationMessage { get; set; } = "Are you sure you want to delete";

    public void Show()
    {
        showConfirmation = true;
        StateHasChanged();
    }

    [Parameter]
    public EventCallback<bool> ConfirmationChanged { get; set; }

    protected async Task OnConfirmationChange(bool value)
    {
        showConfirmation = false;
        await ConfirmationChanged.InvokeAsync(value);
    }
}
