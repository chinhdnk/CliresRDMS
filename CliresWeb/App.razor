@inject IJSRuntime JSRuntime
@inject ILanguageContainerService languageContainer

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(Program).Assembly" PreferExactMatches="@true">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    @if (!context.User.Identity.IsAuthenticated)
                    {
                        <Login></Login>
                    }
                    else
                    {
                        <ErrorComponent errorCode="401" errorMessage=@languageContainer.Keys["error_page:unauthorized"]></ErrorComponent>
                    }
                </NotAuthorized>
            </AuthorizeRouteView>
        </Found>
        <NotFound>

            <LayoutView Layout="@typeof(MainLayout)">
                <!-- Main content -->
                <ErrorComponent errorCode="404" errorMessage=@languageContainer.Keys["error_page:error_404"]></ErrorComponent>
            </LayoutView>

        </NotFound>
    </Router>
</CascadingAuthenticationState>
@code
{
    protected override async Task OnInitializedAsync()
    {
        var currLanguage = await JSRuntime.InvokeAsync<string>("getCookie", "language");
        if (string.IsNullOrWhiteSpace(currLanguage))
            currLanguage = "en-EN";
        languageContainer.SetLanguage(System.Globalization.CultureInfo.GetCultureInfo(currLanguage));
    }
}